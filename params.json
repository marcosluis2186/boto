{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"####\r\nboto\r\n####\r\nboto 2.5.1\r\n14-Jun-2012\r\n\r\n************\r\nIntroduction\r\n************\r\n\r\nBoto is a Python package that provides interfaces to Amazon Web Services.\r\nAt the moment, boto supports:\r\n\r\n* Simple Storage Service (S3)\r\n* SimpleQueue Service (SQS)\r\n* Elastic Compute Cloud (EC2)\r\n* Mechanical Turk\r\n* SimpleDB\r\n* CloudFront\r\n* CloudWatch\r\n* AutoScale\r\n* Elastic Load Balancer (ELB)\r\n* Virtual Private Cloud (VPC)\r\n* Elastic Map Reduce (EMR)\r\n* Relational Data Service (RDS)\r\n* Simple Notification Server (SNS)\r\n* Google Storage\r\n* Identity and Access Management (IAM)\r\n* Route53 DNS Service (route53)\r\n* Simple Email Service (SES)\r\n* Flexible Payment Service (FPS)\r\n* CloudFormation\r\n* Amazon DynamoDB\r\n* Amazon SimpleWorkflow\r\n* CloudSearch\r\n* Marketplace Web Services\r\n\r\nThe goal of boto is to support the full breadth and depth of Amazon\r\nWeb Services.  In addition, boto provides support for other public\r\nservices such as Google Storage in addition to private cloud systems\r\nlike Eucalyptus, OpenStack and Open Nebula.\r\n\r\nBoto is developed mainly using Python 2.6.6 and Python 2.7.1 on Mac OSX\r\nand Ubuntu Maverick.  It is known to work on other Linux distributions\r\nand on Windows.  Boto requires no additional libraries or packages\r\nother than those that are distributed with Python.  Efforts are made\r\nto keep boto compatible with Python 2.5.x but no guarantees are made.\r\n\r\n*********************************\r\nSpecial Note for Python 3.x Users\r\n*********************************\r\n\r\nIf you are interested in trying out boto with Python 3.x, check out the\r\n`neo`_ branch.  This is under active development and the goal is a version\r\nof boto that works in Python 2.6, 2.7, and 3.x.  Not everything is working\r\njust yet but many things are and it's worth a look if you are an active\r\nPython 3.x user.\r\n\r\n***************************\r\nFinding Out More About Boto\r\n***************************\r\n\r\nThe main source code repository for boto can be found on `github.com`_.\r\nThe boto project uses the `gitflow`_ model for branching.\r\n\r\n`Online documentation`_ is also available. The online documentation includes\r\nfull API documentation as well as Getting Started Guides for many of the boto\r\nmodules.\r\n\r\nBoto releases can be found on the `Python Cheese Shop`_.\r\n\r\nJoin our IRC channel `#boto` on FreeNode.\r\nWebchat IRC channel: http://webchat.freenode.net/?channels=boto\r\n\r\n*************************\r\nGetting Started with Boto\r\n*************************\r\n\r\nYour credentials can be passed into the methods that create\r\nconnections.  Alternatively, boto will check for the existance of the\r\nfollowing environment variables to ascertain your credentials:\r\n\r\n**AWS_ACCESS_KEY_ID** - Your AWS Access Key ID\r\n\r\n**AWS_SECRET_ACCESS_KEY** - Your AWS Secret Access Key\r\n\r\nCredentials and other boto-related settings can also be stored in a\r\nboto config file.  See `this`_ for details.\r\n\r\nCopyright (c) 2006-2012 Mitch Garnaat <mitch@garnaat.com>\r\nCopyright (c) 2010-2011, Eucalyptus Systems, Inc.\r\nCopyright (c) 2012 Amazon.com, Inc. or its affiliates.\r\nAll rights reserved.\r\n\r\n","name":"Boto","google":"","tagline":"Python interface to Amazon Web Services"}